{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49],"program":"C:\\Users\\Will Regan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","color_quant","C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7b68eace50db97da","-C","extra-filename=-7b68eace50db97da","--out-dir","c:\\Users\\Will Regan\\Documents\\GitHub\\ApeRust\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Will Regan\\Documents\\GitHub\\ApeRust\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Will Regan\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[99,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,68,111,99,117,109,101,110,116,115,92,71,105,116,72,117,98,92,65,112,101,82,117,115,116,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,99,111,108,111,114,95,113,117,97,110,116,45,55,98,54,56,101,97,99,101,53,48,100,98,57,55,100,97,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"color_quant","disambiguator":[17357847569427284301,12835203408666645874]},"crate_root":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7528587287462463925,14365138709353428393]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6961983669911787511,12763790138191559993]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8881479335952209253,7175408585981261641]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10606302774101958091,6394453555634565640]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[951275427296451120,15089112833676159407]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16986482155481050220,8110678813127715211]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[14152113043115722454,14996294870991823280]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[16544231974546559170,12284481576050828670]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[10490126003503044219,3700128015989034145]}},{"file_name":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[5553849915308501608,7293799346724567721]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2445,"byte_end":16149,"line_start":52,"line_end":440,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2445,"byte_end":16149,"line_start":52,"line_end":440,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Will Regan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\color_quant-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":68},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36}],"decl_id":null,"docs":" # Color quantization library\n This library provides a color quantizer based on the [NEUQUANT](http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n quantization algorithm by Anthony Dekker.\n ### Usage\n ```\n let data = vec![0; 40];\n let nq = color_quant::NeuQuant::new(10, 256, &data);\n let indixes: Vec<u8> = data.chunks(4).map(|pix| nq.index_of(pix) as u8).collect();\n let color_map = nq.color_map_rgba();\n ```\n \n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3729,"byte_end":3737,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33}],"decl_id":null,"docs":" Neural network based color quantizer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4410,"byte_end":4413,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neuronal network and trains it with the supplied data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5031,"byte_end":5035,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neuronal network and trains it with the supplied data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5873,"byte_end":5882,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the rgba-pixel in-place to the best-matching color in the color map.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5844,"byte_end":5861,"line_start":160,"line_end":160,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6473,"byte_end":6481,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6444,"byte_end":6461,"line_start":177,"line_end":177,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6789,"byte_end":6803,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"color_map_rgba","qualname":"<NeuQuant>::color_map_rgba","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the RGBA color map calculated from the sample. \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7178,"byte_end":7191,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"color_map_rgb","qualname":"<NeuQuant>::color_map_rgb","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the RGBA color map calculated from the sample. \n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3943,"byte_end":3951,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,87,105,108,108,32,82,101,103,97,110,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,111,108,111,114,95,113,117,97,110,116,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3943,"byte_end":3951,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}}]}